name: Dataplane Python Package Release

on:
  release:
    types: [published]

jobs:
  worker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Release check out ${{ steps.get_version.outputs.VERSION }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_version.outputs.VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install --upgrade twine
          python3 -m pip install --upgrade build
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi

      - name: Update pyproject.toml version ${{ steps.get_version.outputs.VERSION }}
        run: python3 update_toml_release.py ${{ steps.get_version.outputs.VERSION }}

      - name: Build python package
        run: python3 -m build

      - name: Distribute python package
        run: python3 -m twine upload dist/* -u "__token__" -p ${{ secrets.PYPI_API_TOKEN }}

      # - uses: actions/checkout@v3

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     python3 -m pip install --upgrade toml

      # - name: Update pyproject.toml version ${{ steps.get_version.outputs.VERSION }}
      #   run: python3 update_toml_release.py ${{ steps.get_version.outputs.VERSION }}

      # - name: Commit report
      #   continue-on-error: true
      #   run: |
      #     git config --global user.name 'Dataplane Actions'
      #     git config --global user.email 'saul-data@users.noreply.github.com'
      #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
      #     git checkout "${GITHUB_REF:11}"
      #     git add pyproject.toml
      #     git commit -am "Automated TOML release update"
      #     git push
      #     # git diff --exit-code || git commit -am "Automated TOML release update"
      #     # git diff --exit-code || git push